version: "3"
networks:
    web:
    database:
services:
    # Databases
    mongo:
        image: mongo:latest
        container_name: Mongo
        restart: always
        volumes:
            # Volume de dados
            - ./data/mongo:/data/db
            # Volume de log
            - ./logs/mongo:/var/log/mongodb
            # Volume de scripts
            - ./scripts/mongo:/docker-entrypoint-initdb.d
        networks:
            - database
        environment:
            MONGO_INITDB_DATABASE: squad
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: jxIgWczIREWQmgkzWAmsy26JJKuNLVnw
        ports:
            - 27117:27017
    node:
        image: node:lts
        container_name: Node
        restart: always
        environment:
            - NODE_ENV=production
        working_dir: /home/node/app
        command: /home/node/app/init.sh
        volumes:
            # Servidor
            - ./server:/home/node/app
            - ./www:/www
        ports:
            - 4000:4000
        expose:
            - 4000
        networks:
            - web
            - database
        depends_on:
            - mongo
        links:
            - mongo
    nginx:
        image: nginx:latest
        container_name: Nginx
        restart: always
        volumes:
            # Site
            - ./www:/www
            # Configuração do proxy reverso
            - ./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf
            # Volume de logs
            - ./logs/nginx:/var/log/nginx
        ports:
            - 8000:80
        networks:
            - web
            - database
        depends_on:
            - mongo
            - node
        links:
            - node
